/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

  /* Root Vars */
  :root {
    --system-ui: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";

    --stack-color--attack: orange;
    --stack-color--response: yellow;
    --stack-color--direction: white;
    --stack-color--position: white;

    --card-background: white;

    --card-angle: 0deg;

    --screen-padding: 2vmin;
  }

  $settings-inset: .75rem;

  

  html{
    font-size: 130%;
    min-height: -webkit-fill-available;
  }

  body {
    font-family: var(--system-ui);
    margin: 0;
    padding: 0;

  }

  #app, #settings{
    margin: 0;
    overflow: hidden;
    padding: var(--screen-padding);

    min-height: 100vh;
    min-height: -webkit-fill-available;
  }

  #stacks{
    margin: 0 auto;
    width: auto;
    padding: 0;
    overflow: hidden;


    min-height: 100vh;
    min-height: -webkit-fill-available;
    
    
    
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    text-align: center;


    & > li {
      display: flex;
      flex-direction: column-reverse;
      align-items: center;
      margin: 1rem 0;
    }

    .stack{
      padding: 0;
      display: block;
      position: relative;
      
      
      &-label{
        font-size: .7rem;
        text-transform: uppercase;
        letter-spacing: .1ch;
      }

      &#attack .stack-item{
        background-color: var(--stack-color--attack);
       
      }
      &#response .stack-item{
        background-color: var(--stack-color--response);

      }
      &#direction .stack-item{
        

      }
      &#position .stack-item{
        
      }
      
      .stack-item {
        display: block;
        width: 15rem;
        height: calc(15rem * 9/16);
        position: relative;
        box-shadow: 0 0px 2px rgba(0,0,0,.4);
        border-radius: .1rem;

        transition: transform .1s;
        
        transform: rotate(var(--card-angle));
        

        &:not(:first-of-type){
          position: absolute;
          top: 0;
        }

        &:nth-of-type(2){
          transform: scale(.97) translateY(-.2rem) rotate(var(--card-angle));
          z-index: -2;
        }
        &:nth-of-type(3){
          transform: scale(.94) translateY(-.4rem) rotate(var(--card-angle));
          z-index: -3;
        }
        &:nth-of-type(4){
          transform: scale(.91) translateY(-.6rem) rotate(var(--card-angle));
          z-index: -4;
        }

        &:nth-of-type(n+5){
          opacity: 0;
          transform: scale(.88) translateY(-.8rem) rotate(var(--card-angle));
          z-index: -5;
        }

        button{
          background: none;
          color: inherit;
          border: none;
          padding: 0;
          font: inherit;
          cursor: pointer;
          outline: inherit;

          position: absolute;
          left: 0;
          right: 0;
          top: 0;
          bottom: 0;
          display: block;

          width: 100%; //for FF
        }


        span{
          display: block;
          
          &[lang='en-US'],
          &[lang='ja-JP']
          {
            position: absolute;
            width: calc(100% - 2rem);
            left: 50%;
            transform: translateX(-50%);
          }

          &[lang='en-US']{
            font-size: 1.2rem;
            bottom: 52%
          }
          &[lang='ja-JP']{
            font-size: .8rem;
            opacity: .6;
            top: 52%;
            font-weight: 600;
            letter-spacing: .1ch;
          }
        }
      }
    }
  }
  #new-cards{
    button{
      background: none;
      color: inherit;
      border: none;
      padding: 0;
      font: inherit;
      cursor: pointer;
      outline: inherit;
      position: relative;
      
  
      &::before{
        content: "";
        display: block;
        position: relative;
        z-index: 2;
        
        width: 5rem;
        height: calc(5rem * 9/16);
        background-color: var(--stack-color--attack);

        border-radius: .05rem;
        
        transform: rotate(5deg) translateX(-30%);
      }

      &::after{
        content: "";
        display: block;
        position: absolute;
        top: 0;
        
        width: 5rem;
        height: calc(5rem * 9/16);
        background-color: var(--stack-color--response);

        border-radius: .05rem;
    
        transform: rotate(-5deg) translateX(30%) translateY(15%);
      }
    }
  }

  #settings{
    max-width: 25rem;
    margin: 0 auto;

    h1{
      text-align: center;
      margin: 0;

      &::before{
        font-size: 2.2rem;
        content: "";
        display: block;
        width: .25em;
        height: 1em;
        margin: .5rem auto .5rem;
        //background-color: #ccc;
        background-image: radial-gradient(ellipse at center, #000 0%, #000 47%, transparent 49%,  transparent 100%);
        background-repeat: repeat-y;
        background-size: .33em .33em;
        background-position: center;
      }
    }

    .settings{
      & > li{
        &:not(:last-child){
          margin: 0 0 2rem 0;
        }
      }
      list-style-type: none;
      padding: 0;
      
      &-label{
        font-size: .7rem;
        text-transform: uppercase;
        letter-spacing: .1ch;
        font-weight: 500;
        margin: .25rem $settings-inset;
      }
      &-note{
        padding-left: $settings-inset;
        margin: .25rem 0;
        font-size: .7rem;
        letter-spacing: .02ch;
      }

      &-set{
        list-style-type: none;
        padding: 0;
        border-radius: .25rem;
        overflow: hidden;
        margin: .25rem 0;

        background-color: rgba(0,0,0,.1);

        &-item{
          padding: .5rem $settings-inset .5rem 0;
          margin-left: $settings-inset;
          position: relative;
          
          
          &:not(:first-of-type){
            border-top: solid 1px rgba(0,0,0,.1);
          }

          &:focus-within{
            .toggle-component{
              background-color: rgba(0,0,0,.1);
            }
          }
          &:focus-within, &:focus-within + * {
            border-color: transparent;
          }
        
          .toggle-component{
            display: flex;
            justify-content: space-between;
            align-items: center;
            
            margin: calc(-.5rem - 1px) calc(-1 * #{$settings-inset}) calc(-.5rem - 1px) calc(-1 * #{$settings-inset});
            padding: .5rem .5rem .5rem $settings-inset;

            &:active{
              background-color: rgba(0,0,0,.1);
            }
           
          }
          
          
        }
      }
    }
  }
  
  .toggle-component{

    .toggle-label{
      line-height: 1.1;
    }
    .toggle-checkbox{
      @extend .visually-hidden;
    }
    .toggle-checkbox ~ .toggle-switch{
      background: rgba(0,0,0,.1);
      display: inline-block;
      width: 2.5rem;
      height: 1.2rem;
      border-radius: calc(.6rem + 4px) ;
      padding: 2px;
      // box-sizing: border-box;
      transition: .25s;

      position: relative;

      &::after{
        content: "";
        display: block;
        position: absolute;
        left: 2px;
        top: 2px;
        background-color: white;
        width: 1.2rem;
        height: 1.2rem;
        border-radius: 50%;
        transition: .1s;
        
      }
    }

    .toggle-checkbox:checked ~ .toggle-switch{
      background-color: var(--stack-color--attack);

      &::after{
        content: "";
        left: calc(100% - 2px - 1.2rem);
      }
    }
  }

  .menu{
    &, & > ul{
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      
      width: 100%;
    }
    &-item{
      list-style-type: none;
      min-width: 2rem;
      height: 2rem;
      text-align: center;
      margin: 0.2rem;
      position: relative;

      border-radius: 50%;

      &:hover{
        background-color: #ccc;
      }
    }

   &-item__toggle{
    input {
      display: none;
    }
    .menu-toggle{

    }
   }
    
    #menu-speak ~ label .menu-item__toggle-button,
    #menu-speak ~ label .menu-item__toggle-button::before,
    #menu-speak ~ label .menu-item__toggle-button::after{
      position: absolute;
      
      background-image: url(../img/speak-sprite.svg);
      background-size: auto 100%;
      background-repeat: no-repeat;
      
    }

    #menu-speak ~ label .menu-item__toggle-button{
      background-position: center left;
      top: 15%;
      right: 15%;
      bottom: 15%;
      left: 15%;
      //outline: solid 1px red;
    }

    #menu-speak ~ label .menu-item__toggle-button::before,
    #menu-speak ~ label .menu-item__toggle-button::after{
       content: "";
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-repeat: no-repeat;
       //outline: solid 1px blue;
        
        
    }

    

    #menu-speak ~ label .menu-item__toggle-button::before{
      background-position: center center;
      transform-origin: 25% 50%;
    }
    #menu-speak ~ label .menu-item__toggle-button::after{
      background-position: center right;
      transform-origin: 75% 50%;
      
    }

    #menu-speak:checked ~ label {
      background-color: red;;
      .menu-item__toggle-button::before{
        opacity: 1;
        scale: 1;
        transition-delay: .4s;
        transition: .5s ease-out;
      }
      .menu-item__toggle-button::after{
        opacity: 0;
        scale: .5;
        transition-delay: 0s;
        transition: .5s;
      }
      
    }
    #menu-speak:not(checked) ~ label {
      .menu-item__toggle-button::before{
        opacity: 0;
        scale: .5;
        transition-delay: 0s;
        transition: .0s;
      }
      .menu-item__toggle-button::after{
        opacity: 1;
        scale: 1;
        transition-delay: .4s;
        transition: .5s ease-out;

      }
    }

    #menu-settings{
      position: relative;
      display: block;
      height: 100%;
      &::before{
        position: absolute;
      
        left: 50%;
        top: 50%;
        transform: translate(-50%,-50%);
        font-size: 1.5rem;
        content: "";
        display: block;
        width: .25em;
        height: 1em;
 
        //background-color: #ccc;
        background-image: radial-gradient(ellipse at center, #000 0%, #000 47%, transparent 49%,  transparent 100%);
        background-repeat: repeat-y;
        background-size: .33em .33em;
        background-position: center;
      }

    }
  }
  
   
   

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

